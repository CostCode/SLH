/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package edu.cmu.cc.slh.dao;

import edu.cmu.cc.slh.dto.*;
import edu.cmu.cc.slh.exceptions.*;

public interface TblWarehouseDao
{
	/** 
	 * Inserts a new row in the TBL_Warehouse table.
	 */
	public TblWarehousePk insert(TblWarehouse dto) throws TblWarehouseDaoException;

	/** 
	 * Updates a single row in the TBL_Warehouse table.
	 */
	public void update(TblWarehousePk pk, TblWarehouse dto) throws TblWarehouseDaoException;

	/** 
	 * Deletes a single row in the TBL_Warehouse table.
	 */
	public void delete(TblWarehousePk pk) throws TblWarehouseDaoException;

	/** 
	 * Returns the rows from the TBL_Warehouse table that matches the specified primary-key value.
	 */
	public TblWarehouse findByPrimaryKey(TblWarehousePk pk) throws TblWarehouseDaoException;

	/** 
	 * Returns all rows from the TBL_Warehouse table that match the criteria 'WID = :wid'.
	 */
	public TblWarehouse findByPrimaryKey(int wid) throws TblWarehouseDaoException;

	/** 
	 * Returns all rows from the TBL_Warehouse table that match the criteria ''.
	 */
	public TblWarehouse[] findAll() throws TblWarehouseDaoException;

	/** 
	 * Returns all rows from the TBL_Warehouse table that match the criteria 'UID = :uid'.
	 */
	public TblWarehouse[] findByTblManagers(int uid) throws TblWarehouseDaoException;

	/** 
	 * Returns all rows from the TBL_Warehouse table that match the criteria 'WID = :wid'.
	 */
	public TblWarehouse[] findWhereWidEquals(int wid) throws TblWarehouseDaoException;

	/** 
	 * Returns all rows from the TBL_Warehouse table that match the criteria 'Address = :address'.
	 */
	public TblWarehouse[] findWhereAddressEquals(String address) throws TblWarehouseDaoException;

	/** 
	 * Returns all rows from the TBL_Warehouse table that match the criteria 'UID = :uid'.
	 */
	public TblWarehouse[] findWhereUidEquals(int uid) throws TblWarehouseDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the TBL_Warehouse table that match the specified arbitrary SQL statement
	 */
	public TblWarehouse[] findByDynamicSelect(String sql, Object[] sqlParams) throws TblWarehouseDaoException;

	/** 
	 * Returns all rows from the TBL_Warehouse table that match the specified arbitrary SQL statement
	 */
	public TblWarehouse[] findByDynamicWhere(String sql, Object[] sqlParams) throws TblWarehouseDaoException;

}
